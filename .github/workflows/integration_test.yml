name: Integration Tests

on:
  push:
    branches:
      - integration
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Retrieve Version
      if: success()
      run: |
        current=$(cat .version)
        IFS="." tokens=($current)
        last_major_version=${tokens[0]}
        new_major_version=${tokens[0]}
        last_minor_version=${tokens[1]}
        new_minor_version=${tokens[1]}
        last_patch_version=${tokens[2]}
        new_patch_version=${tokens[2]}
                
        if [ '${{ github.event.head_commit.message }}' == *'***MAJOR***'* ]; then
          new_major_version=$((${last_major_version} + 1))
          new_minor_version=0
          new_patch_version=0
        elif [ '${{ github.event.head_commit.message }}' == *'***MINOR***'* ]; then
          new_minor_version=$((${last_minor_version} + 1))
          new_patch_version=0
        else
          new_patch_version=$((${last_patch_version} + 1))
        fi
        
        echo Old Version: $last_major_version.$last_minor_version.$last_patch_version
        echo New Version: $new_major_version.$new_minor_version.$new_patch_version
        echo $new_major_version.$new_minor_version.$new_patch_version > '.version'  
    
