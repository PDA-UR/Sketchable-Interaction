name: Integration Tests

on:
  push:
    branches:
      - integration
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Qt5
      run: |
        sudo apt-get update
        sudo apt-get --fix-missing install qtbase5-dev
        sudo apt-get install qtdeclarative5-dev
        
    - name: Install GLM
      run: |
        sudo apt-get install libglm-dev
        
    - name: Install uuid
      run: |
        sudo apt-get install uuid-dev

    - name: Install PythonLibs
      run: |
        sudo apt-get install python3-dev
        
    - name: Install Boost-Python
      run: |
        mkdir temp
        cd temp
        wget https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz
        tar xzf boost_1_69_0.tar.gz
        cd boost_1_69_0 
        sudo ln -s /usr/local/include/python3.7m /usr/local/include/python3.7
        sed -i "s@includes ?= \$(prefix)/include/python\$(version)@includes ?= \$(prefix)/include/python\$(version)m@" tools/build/src/tools/python.jam
        sudo ./bootstrap.sh --with-python=$(which python3)
        sudo ./b2 --with-system --with-python -j 8 install       
        cd ..
        cd ..
        
    - name: configure
      if: success()
      run: cmake .
    
    - name: Compile SI
      if: success()
      run: |
        cmake --build /home/runner/work/Sketchable-Interaction/Sketchable-Interaction --target run_unit_tests -j 8
        
    - name: Test SI
      if: success()
      run: |
        (cd /home/runner/work/Sketchable-Interaction/Sketchable-Interaction/SI/tests;./../../run_unit_tests)
   
    - name: Major Versioning
      if: success() && contains(${{ github.event.head_commit.message }},'[MAJOR]')
      run: |
        current=$(cat .version)
        IFS="." tokens=($current)
        last_major_version=${tokens[0]}
        new_major_version=$((${last_major_version} + 1))
        new_version=$new_major_version${tokens[1]}${tokens[2]}

        echo new_versiom > '.version'
        # echo "::set-env name=CURRENT_VERSION::$current"
          
    - name: Patch Versioning
      if: success() && !"contains(${{ github.event.head_commit.message }},'[MINOR]')" && !"contains(${{ github.event.head_commit.message }},'[MAJOR]')" 
      run: |
        cat version
      #run: |
       # current=$(cat .version)
        #IFS="." tokens=($current)
        #last_major_version=${tokens[0]}
        #new_major_version=$((${last_major_version} + 1))
        #new_version=$new_major_version${tokens[1]}${tokens[2]}
          
         # echo new_versiom > '.version'
          # echo "::set-env name=CURRENT_VERSION::$current"
          
          
      #- uses: actions/checkout@v2
        #with:
          #ref: integration
          
      #- name: Create Pull Request
        #uses: peter-evans/create-pull-request@v2.2.0
        #with:
          #token: ${{ secrets.GITHUB_TOKEN }}        
