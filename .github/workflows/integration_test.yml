name: Integration Tests

on:
  push:
    branches:
      - integration
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Retrieve Version
      if: success()
      run: |
        current=$(cat .version)
        IFS="." tokens=($current)
        last_major_version=${tokens[0]}
        new_major_version=${tokens[0]}
        last_minor_version=${tokens[1]}
        new_minor_version=${tokens[1]}
        last_patch_version=${tokens[2]}
        new_patch_version=${tokens[2]}
        
        if [ "${{ github.event.head_commit.message }}" == *"[MAJOR]"* ]; then
          new_major_version=$((${last_major_version} + 1))
        elif [ "${{ github.event.head_commit.message }}" == *"[MINOR]"* ]; then
          new_minor_version=$((${last_minor_version} + 1))
        else
          new_patch_version=$((${last_patch_version} + 1))
        fi
        
        echo $new_major_version.$new_minor_version.$new_patch_version > '.version'  
    
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .version
        git commit -m "Update Version"
        
    - name: Install Qt5
      run: |
        sudo apt-get update
        sudo apt-get --fix-missing install qtbase5-dev -qq > /dev/null
        sudo apt-get install qtdeclarative5-dev -qq > /dev/null
        
    - name: Install GLM
      run: |
        sudo apt-get install libglm-dev -qq > /dev/null
        
    - name: Install uuid
      run: |
        sudo apt-get install uuid-dev -qq > /dev/null

    - name: Install PythonLibs
      run: |
        sudo apt-get install python3-dev -qq > /dev/null
        
    - name: Install Boost-Python
      run: |
        mkdir temp
        cd temp
        wget https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz
        tar xzf boost_1_69_0.tar.gz
        cd boost_1_69_0 
        sudo ln -s /usr/local/include/python3.7m /usr/local/include/python3.7
        sed -i "s@includes ?= \$(prefix)/include/python\$(version)@includes ?= \$(prefix)/include/python\$(version)m@" tools/build/src/tools/python.jam
        sudo ./bootstrap.sh --with-python=$(which python3)
        sudo ./b2 --with-system --with-python -j 8 -d0 install       
        cd ..
        cd ..
        
    - name: configure
      if: success()
      run: cmake .
    
    - name: Compile SI
      if: success()
      run: |
        cmake --build /home/runner/work/Sketchable-Interaction/Sketchable-Interaction --target run_unit_tests -j 8
        
    - name: Test SI
      if: success()
      run: |
        (cd /home/runner/work/Sketchable-Interaction/Sketchable-Interaction/SI/tests;./../../run_unit_tests)
        
    - name: Push Version
      if: success()
      uses: ad-m/github-push-action@master
      with:
        branch: integration
        github_token: ${{ secrets.GITHUB_TOKEN }}
        
  
  pull-request:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      
    - name: Create Pull Request
      uses: repo-sync/pull-request@v2
      with:
        source_branch: "integration"                     # If blank, default: triggered branch
        destination_branch: "master"          # If blank, default: master
        pr_title: "Pulling ${{ github.ref }} into master"
        commit-message: ${{ github.event.head_commit.message }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
  
