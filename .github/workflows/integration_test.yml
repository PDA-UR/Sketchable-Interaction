name: Integration Tests

on:
  push:
    branches:
      - integration

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Retrieve Version
      if: success()
      run: |
        current=$(cat .version)
        IFS="." tokens=($current)
        last_major_version=${tokens[0]}
        new_major_version=${tokens[0]}
        last_minor_version=${tokens[1]}
        new_minor_version=${tokens[1]}
        last_patch_version=${tokens[2]}
        new_patch_version=${tokens[2]}
                
        if [[ "${{ github.event.head_commit.message }}" == *"[MAJOR]"* ]]; then
          new_major_version=$((${last_major_version} + 1))
          new_minor_version=0
          new_patch_version=0
        elif [[ "${{ github.event.head_commit.message }}" == *"[MINOR]"* ]]; then
          new_minor_version=$((${last_minor_version} + 1))
          new_patch_version=0
        else
          new_patch_version=$((${last_patch_version} + 1))
        fi
        
        echo Old Version: $last_major_version.$last_minor_version.$last_patch_version
        echo New Version: $new_major_version.$new_minor_version.$new_patch_version
        previous=$current
        filename_sigrun_prev=sigrun"${previous}".html
        filename_pysi_prev=pysi"${previous}".html

        echo $new_major_version.$new_minor_version.$new_patch_version > '.version'  
            
        current=$(cat .version)
        
        sed -i 's|SIGRun'"$previous"'|SIGRun'"$current"'|g' SI-Doc/si/sigrun/html/docs/index.html
        sed -i 's|PySI'"$previous"'|PySI'"$current"'|g' SI-Doc/si/pysi/html/docs/index.html
        
        filename_sigrun=sigrun"${current}".html
        filename_pysi=pysi"${current}".html

        git mv SI-Doc/si/sigrun/html/"$filename_sigrun_prev" SI-Doc/si/sigrun/html/"$filename_sigrun"  
        git mv SI-Doc/si/pysi/html/"$filename_pysi_prev" SI-Doc/si/pysi/html/"$filename_pysi"   

        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .version
        git add SI-Doc/si/sigrun/html/docs/index.html
        git add SI-Doc/si/pysi/html/docs/index.html

        git commit -m "Update Version"
        
    - name: Set C++ Compiler
      run: |
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
        
    - name: Install Dependencies
      run: |
        if [[ "${{ github.event.head_commit.message }}" != *"[NO CI]"* ]]; then
          sudo apt-get update
          sudo apt-get --fix-missing install qtbase5-dev -qq > /dev/null
          sudo apt-get install qtdeclarative5-dev -qq > /dev/null
          sudo apt-get install libglm-dev -qq > /dev/null
          sudo apt-get install uuid-dev -qq > /dev/null
          sudo apt-get install python3.7-dev -qq > /dev/null
          sudo apt-get install gdb -qq > /dev/null
        fi 
        
    - name: Install tbb
      run: |
        if [[ "${{ github.event.head_commit.message }}" != *"[NO CI]"* ]]; then          
          echo "deb http://no.archive.ubuntu.com/ubuntu eoan main universe" | sudo tee -a  /etc/apt/sources.list
          
          sudo sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
          grep -E 'archive.ubuntu.com|security.ubuntu.com' /etc/apt/sources.list.d/*

          sudo apt-get update
          sudo apt install libtbb-dev
        fi

    - name: Install Boost with components System, Python and Filesystem 
      run: |
        mkdir temp &&
        cd temp &&
        wget https://sourceforge.net/projects/boost/files/boost/1.69.0/boost_1_69_0.tar.gz/download &&
        tar xzf download &&
        cd boost_1_69_0 &&
        sudo ln -s /usr/local/include/python3.7m /usr/local/include/python3.7 &&
        sed -i "s@includes ?= \$(prefix)/include/python\$(version)@includes ?= \$(prefix)/include/python\$(version)m@" tools/build/src/tools/python.jam  &&
        sudo ./bootstrap.sh --with-python=$(which python3) &&
        sudo ./b2 --with-system --with-python --with-filesystem -j 8 -d0 install &&       
        cd ..
        cd ..    
                
    - name: Compile SI
      env:
        CC: gcc
      if: success()
      run: |
        if [[ "${{ github.event.head_commit.message }}" != *"[NO CI]"* ]]; then
          cmake .
          cmake --build  /home/runner/work/Sketchable-Interaction/Sketchable-Interaction --target run_unit_tests egen -j 8
        fi
        
    - name: Fetch SI Plugins
      if: success()
      run: |
        if [[ "${{ github.event.head_commit.message }}" != *"[NO CI]"* ]]; then
          git clone https://github.com/PDA-UR/Sketchable-Interaction-Plugins.git //home/runner/work/Sketchable-Interaction/Sketchable-Interaction/SI/plugins
        fi
        
    - name: Test SI
      if: success()
      run: |
        if [[ "${{ github.event.head_commit.message }}" != *"[NO CI]"* ]]; then
          cd /home/runner/work/Sketchable-Interaction/Sketchable-Interaction/SI
          ./../egen
          
          echo "Showing Test Results:"
          test_output="$(./../run_unit_tests)"
          echo ${test_output}
          
          if [[ ${test_output} == *"FAILED TESTS"* ]]; then
            exit 1
          fi
          
          ls -la
        fi
        
    - name: Push Version
      if: success()
      uses: ad-m/github-push-action@master
      with:
        branch: integration
        github_token: ${{ secrets.GITHUB_TOKEN }}
        
  pull-request:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      
    - name: Create Pull Request
      uses: repo-sync/pull-request@v2
      with:
        source_branch: "integration"
        destination_branch: "master"
        pr_title: "Pulling ${{ github.ref }} into master"
        commit-message: ${{ github.event.head_commit.message }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
