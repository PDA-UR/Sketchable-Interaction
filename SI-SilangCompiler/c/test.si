A := region => type(MoveableRegion) & shape => type(blueprint) := [];
B := region => type(MoveableRegion);

C := region => type(MoveableRegion) & shape => type(present) := [(1, 1)];
D := region => type(MoveableRegion) & shape => type(present) := [(1, 1),(2,2),(3,3)];

# D <-> C => position;

E := region => type(composition) & sequence := [A, B, C, D];
# F := region => type(composition) & sequence := [MoveableRegion, MoveableRegion, MoveableRegion, MoveableRegion];
# G := region => type(composition) & sequence := [A, B];
